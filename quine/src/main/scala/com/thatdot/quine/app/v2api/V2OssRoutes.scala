package com.thatdot.quine.app.v2api

import scala.concurrent.Future

import sttp.apispec.openapi.Info
import sttp.tapir.server.ServerEndpoint
import sttp.tapir.{EndpointInput, query}

import com.thatdot.common.logging.Log.LogConfig
import com.thatdot.quine.app.v2api.definitions._
import com.thatdot.quine.app.v2api.endpoints.{
  V2AlgorithmEndpoints,
  V2CypherEndpoints,
  V2DebugEndpoints,
  V2IngestEndpoints,
  V2QuineAdministrationEndpoints,
  V2StandingEndpoints,
  V2UiStylingEndpoints,
}

/** Gathering of Quine OSS tapir-defined routes.
  */
class V2OssRoutes(val appMethods: OssApiMethods)(implicit protected val logConfig: LogConfig)
    extends TapirRoutes
    with V2UiStylingEndpoints
    with V2QuineAdministrationEndpoints
    with V2StandingEndpoints
    with V2CypherEndpoints
    with V2AlgorithmEndpoints
    with V2DebugEndpoints
    with V2IngestEndpoints {

  override val apiEndpoints: List[ServerEndpoint[Any, Future]] = {
    uiEndpoints ++ adminEndpoints ++ debugEndpoints ++ ingestEndpoints ++ algorithmEndpoints ++ standingQueryEndpoints ++ cypherEndpoints
  }

  //Hidden in OSS api
  def memberIdxParameter: EndpointInput[Option[Int]] =
    query[Option[Int]]("memberIdx").schema(_.hidden(true))
  //Hidden in OSS api
  def namespaceParameter: EndpointInput[Option[String]] =
    query[Option[String]]("namespace").schema(_.hidden(true))

  val apiInfo: Info = Info(
    title = "thatdot-api-v2",
    version = "1.0.0",
    description = Some(
      """The following is autogenerated from the OpenAPI specification openapi.json
        |and is included in Quine as fully interactive documentation. When running Quine, you can issue
        |API calls directly from the embedded documentation pages.""".asOneLine + "\n\n" +
      "For docs, guides, and tutorials, please visit https://quine.io",
    ),
  )

}
